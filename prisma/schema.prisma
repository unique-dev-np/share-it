// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int     @id @unique @default(autoincrement())
  name           String
  hashesPassword String
  email          String  @unique
  balance        Float   @default(0)
  emailVerified  Boolean @default(false)

  buckets Bucket[]
  Payment Payment[]
}

model Bucket {
  id       String @id @unique @default(uuid())
  name     String
  size     Int
  usedSize Int    @default(0)

  expiresIn DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int

  files File[]

  isLocked Boolean @default(true)
}

model File {
  id        Int      @id @unique @default(autoincrement())
  key       String
  name      String
  type      String
  url       String
  size      Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  bucket   Bucket @relation(fields: [bucketId], references: [id])
  bucketId String
}

model Payment {
  id        Int          @id @unique @default(autoincrement())
  state     PaymentState
  createdAt DateTime     @default(now())

  user   User @relation(fields: [userId], references: [id])
  userId Int
}

enum PaymentState {
  PENDING
  FAILED
  SUCCESS
}
